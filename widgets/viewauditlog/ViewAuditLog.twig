<{{ widget.tag }} id="{{ widget.id }}" {{ html.renderTagAttributes(widget.options) }}>

{% if widget.auditLog %}
{% set modal = t.getWidget('yii.bootstrap.Modal') %}
    {% set modal = modal.begin({
        "id": "auditlog-widget-modal-" ~ widget.id
    }|merge(widget.modalConfig)) %}
    {% for auditEntryAction in widget.auditLog %}
        <div class="panel panel-{% if auditEntryAction.0.action == "update" %}success{% elseif auditEntryAction.0.action ==  "insert" %}primary{% elseif auditEntryAction.0.action ==  "delete" %}warning{% endif %}">
            <div class="panel-heading audit-action-{{ auditEntryAction.0.action }}">{{ auditEntryAction.0.action | title }}
                - {{ auditEntryAction.0.createdAt | date }}</div>
            <div class="panel-body">
                <p>
                    {% if auditEntryAction.0.createdUserId %}
                        {{ t.renderWidget("mozzler.base.widgets.model.view.RenderField", arrayhelper.merge([], {"model": auditEntryAction.0, "attribute" : "createdUserId"})) }}
                    {% endif %}
                </p>

                <table class="table">
                    <thead>
                    <tr>
                        <th class="auditlog-header-field">Field</th>
                        <th class="auditlog-header-new-value">New Value</th>
                        <th class="auditlog-header-previous-value">Previous Value</th>
                    </tr>
                    </thead>
                    {% for auditEntry in auditEntryAction %}
                        <tr>
                            <td class="auditlog-field">
                                {{ t.renderWidget("mozzler.base.widgets.model.view.RenderField", {"wrapLayout": false, "model": auditEntry, "attribute" : "field"}) }}
                            </td>

                            {% for referenceModel in ['newModel', 'previousModel', ] %}
                                <td class="auditlog-{{ auditEntry.field }}-{{ referenceModel }}">
                                    {% if auditEntry[referenceModel] %}
                                        {{ t.renderWidget("mozzler.base.widgets.model.view.RenderField", {"wrapLayout": false, "model": auditEntry[referenceModel], "attribute" : auditEntry.field }) }}
                                    {% endif %}
                                </td>
                            {% endfor %}
                        </tr>
                    {% endfor %}
                </table>
            </div>
        </div>
    {% endfor %}
{% set widget = widget.end() %}
{% endif %}
</{{ widget.tag }}>